# NVIDIA Riva ASR Deployment Configuration Template
# Copy this file to .env and fill in your values
# cp .env.example .env

# ============================================================================
# Deployment Strategy
# ============================================================================
# Deployment strategy: 1=AWS EC2, 2=Local Docker, 3=NIM Cloud
DEPLOYMENT_STRATEGY=1

# Unique deployment identifier (auto-generated by scripts)
DEPLOYMENT_ID=

# Deployment timestamp (auto-generated by scripts)
DEPLOYMENT_TIMESTAMP=

# Riva host type: aws_ec2, local, nim_cloud
RIVA_HOST_TYPE=aws_ec2

# ============================================================================
# AWS Configuration (Required for EC2 deployment)
# ============================================================================
# AWS region where GPU instance will be deployed (e.g., us-east-2, us-west-2)
AWS_REGION=us-east-2

# Your AWS account ID (12-digit number)
AWS_ACCOUNT_ID=

# GPU instance type (g4dn.xlarge recommended for RIVA, ~$0.526/hour)
GPU_INSTANCE_TYPE=g4dn.xlarge

# SSH key pair name (without .pem extension)
# Example: If you have ~/.ssh/my-key.pem, set this to "my-key"
SSH_KEY_NAME=

# ============================================================================
# Riva Server Connection
# ============================================================================
# Riva GPU instance IP (auto-updated by scripts)
RIVA_HOST=

# Riva gRPC port (default: 50051)
RIVA_PORT=50051

# Riva HTTP health check port (default: 8000)
RIVA_HTTP_PORT=8000

# Use SSL for Riva connection? (true/false)
RIVA_SSL=false

# SSL certificate paths (leave empty if RIVA_SSL=false)
RIVA_SSL_CERT=
RIVA_SSL_KEY=

# ============================================================================
# Riva Model Configuration
# ============================================================================
# Model name (conformer-ctc-xl-en-us-streaming recommended for streaming ASR)
RIVA_MODEL=conformer-ctc-xl-en-us-streaming

# Language code (en-US, es-US, etc.)
RIVA_LANGUAGE_CODE=en-US

# Enable automatic punctuation? (true/false)
RIVA_ENABLE_AUTOMATIC_PUNCTUATION=true

# Enable word-level timestamps? (true/false)
RIVA_ENABLE_WORD_TIME_OFFSETS=true

# ============================================================================
# S3 Model Paths (Required for model caching and deployment)
# ============================================================================
# S3 bucket name for storing RIVA models and containers
S3_MODEL_BUCKET=

# RIVA server Docker image tarball
# Example: s3://my-bucket/riva-speech-2.19.0.tar.gz
RIVA_SERVER_PATH=

# Conformer-CTC model paths (Scripts 100-110, Deploy: 125)
# Pre-built RMIR file (saves ~2 minutes vs building from source)
S3_CONFORMER_RMIR=

# Source .riva file from NGC (only needed if building RMIR from scratch)
S3_CONFORMER_SOURCE=

# Triton model repository cache (saves ~5 minutes on deployment)
S3_CONFORMER_TRITON_CACHE=

# Parakeet RNNT model paths (Scripts 116-118, Deploy: 135)
# Note: Parakeet RNNT only works in NIM, not classic RIVA 2.19
S3_PARAKEET_SOURCE=
S3_PARAKEET_TRITON_CACHE=

# ============================================================================
# NVIDIA NGC (Required for downloading models)
# ============================================================================
# NGC API key from https://ngc.nvidia.com/setup/api-key
# Required for downloading RIVA models from NGC catalog
NGC_API_KEY=

# ============================================================================
# Connection Settings
# ============================================================================
# Connection timeout in milliseconds
RIVA_TIMEOUT_MS=5000

# Maximum retry attempts for failed connections
RIVA_MAX_RETRIES=3

# Delay between retries in milliseconds
RIVA_RETRY_DELAY_MS=1000

# ============================================================================
# Performance Tuning
# ============================================================================
# Maximum batch size for RIVA inference
RIVA_MAX_BATCH_SIZE=8

# Audio chunk size in bytes (8192 = ~256ms at 16kHz)
RIVA_CHUNK_SIZE_BYTES=8192

# Enable partial (interim) results during streaming? (true/false)
RIVA_ENABLE_PARTIAL_RESULTS=true

# Minimum interval between partial results in milliseconds
RIVA_PARTIAL_RESULT_INTERVAL_MS=300

# ============================================================================
# Build & Deployment Optimizations (Scripts 100-102, 125)
# ============================================================================
# Skip SCP hop, sync GPUâ†’S3 directly in script 102? (true/false)
# Requires GPU instance to have AWS credentials (IAM role)
REMOTE_SYNC=false

# Optional validation audio file for smoke testing models (script 124)
# Should be 16kHz mono PCM WAV, 3-5 seconds duration
# Example: s3://my-bucket/test-audio/hello.wav
GOLDEN_WAV_S3=

# ============================================================================
# Application Server Settings (Build Box)
# ============================================================================
# WebSocket bridge listen address (0.0.0.0 = all interfaces)
APP_HOST=0.0.0.0

# WebSocket bridge HTTPS port (WSS endpoint)
APP_PORT=8443

# Demo UI HTTPS port (separate from WebSocket)
DEMO_PORT=8444

# SSL certificate paths (created by script 010)
APP_SSL_CERT=/opt/riva/certs/server.crt
APP_SSL_KEY=/opt/riva/certs/server.key

# WebSocket bridge deployment directory (auto-detected from project name)
BRIDGE_DEPLOY_DIR=/opt/riva/transcription-realtime-whisper-ver2

# ============================================================================
# WebSocket Settings
# ============================================================================
# Maximum concurrent WebSocket connections
WS_MAX_CONNECTIONS=100

# WebSocket ping interval in seconds (keep-alive)
WS_PING_INTERVAL_S=30

# Maximum WebSocket message size in MB
WS_MAX_MESSAGE_SIZE_MB=10

# ============================================================================
# Audio Processing
# ============================================================================
# Audio sample rate in Hz (16000 required for RIVA)
AUDIO_SAMPLE_RATE=16000

# Audio channels (1=mono, 2=stereo; RIVA requires mono)
AUDIO_CHANNELS=1

# Audio encoding format (pcm16 = 16-bit PCM)
AUDIO_ENCODING=pcm16

# Maximum segment duration in seconds
AUDIO_MAX_SEGMENT_DURATION_S=30

# Enable Voice Activity Detection? (true/false)
AUDIO_VAD_ENABLED=true

# VAD threshold (0.0-1.0, higher = more aggressive silence detection)
AUDIO_VAD_THRESHOLD=0.5

# ============================================================================
# Observability
# ============================================================================
# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# Log directory (created by script 010)
LOG_DIR=/opt/riva/logs

# Enable Prometheus metrics? (true/false)
METRICS_ENABLED=true

# Metrics HTTP port
METRICS_PORT=9090

# Enable distributed tracing? (true/false)
TRACING_ENABLED=false

# OTLP tracing endpoint (if TRACING_ENABLED=true)
TRACING_ENDPOINT=http://localhost:4317

# ============================================================================
# Development/Testing
# ============================================================================
# Enable debug mode? (true/false)
DEBUG_MODE=false

# Test audio directory
TEST_AUDIO_PATH=/opt/riva/test_audio

# ============================================================================
# Status Flags (Auto-updated by deployment scripts)
# ============================================================================
# Configuration validation status (auto-set by scripts)
CONFIG_VALIDATION_PASSED=

# RIVA deployment status: pending, deployed, failed
RIVA_DEPLOYMENT_STATUS=pending

# App deployment status: pending, deployed, failed
APP_DEPLOYMENT_STATUS=pending

# Testing status: pending, passed, failed
TESTING_STATUS=pending

# GPU instance ID (auto-updated by scripts)
GPU_INSTANCE_ID=

# Environment version for migrations (auto-updated)
ENV_VERSION=4

# GPU instance public IP (auto-updated by scripts)
GPU_INSTANCE_IP=

# Security group ID (auto-updated by scripts)
SECURITY_GROUP_ID=

# ============================================================================
# IAM Configuration (for S3 access from GPU instance)
# ============================================================================
# IAM role name for GPU instance (created by script 020)
IAM_ROLE_NAME=riva-gpu-role

# IAM instance profile name (created by script 020)
IAM_INSTANCE_PROFILE_NAME=riva-gpu-profile

# IAM policy ARN (created by script 020)
IAM_POLICY_ARN=

# S3 read-only access configured? (auto-set by script 020)
S3_READONLY_ACCESS_CONFIGURED=

# ============================================================================
# Build Box Configuration (Auto-detected)
# ============================================================================
# Build box security group ID (auto-detected by scripts)
BUILDBOX_SECURITY_GROUP=

# Build box public IP (auto-detected by scripts)
BUILDBOX_PUBLIC_IP=
